@model OnLib.Models.TitelViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Titel</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.TitelId)

        <div class="form-group">
            @Html.LabelFor(model => model.Autor, new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                @Html.DropDownList("AutorId", String.Empty)
                @Html.ValidationMessageFor(model => model.AutorId)
            </div>*@
            <div class="col-md-10">
                <p>
                    @Html.TextBoxFor(model => model.AutorNachname)
                    @Html.ValidationMessageFor(model => model.AutorNachname)
                </p>
                <p>
                    @Html.TextBoxFor(model => model.AutorVorname)
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypId, "Typ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypId", String.Empty)
                @Html.ValidationMessageFor(model => model.TypId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kurzbeschreibung, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kurzbeschreibung)
                @Html.ValidationMessageFor(model => model.Kurzbeschreibung)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Beschreibung, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Beschreibung)
                @Html.ValidationMessageFor(model => model.Beschreibung)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreName, "Genre", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenreName)
                @Html.ValidationMessageFor(model => model.GenreName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Erscheinung, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Erscheinung)
                @Html.ValidationMessageFor(model => model.Erscheinung)
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.CoverPfad))
        {
            <img src="@Model.CoverPfad" height="100" />
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<form id="TitelCoverUploadForm" action="/Titel/UploadCover" method="post" name="TitelCoverUploadForm" enctype="multipart/form-data">
    <input id="TitelId" type="hidden" name="TitelId" value="@Model.TitelId" />
    <input id="imgUploadCover" title="Titel-Cover hochladen" type="file" name="imgUploadCover" />
    <input title="Upload" type="submit" value="Upload" />
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
